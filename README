#
#  $Id$
#

This package contains a collection of scripts and support files
that support running the GCC (http://gcc.gnu.org) testsuite for
C, C++, Ada.

This testing environment is used on the GCC Compile Farm as well
as at OAR.

Source Code and Patches
=======================
You are responsible for setting up the source. And it should look
something like this:

TESTROOT
  - gcc SOURCE directory
  - gdb SOURCE directory
  - rtems SOURCE directory
  - automake SOURCE directory
  - autoconf SOURCE directory
  - binutils SOURCE directory
  - newlib SOURCE directory
  - gcc-testing (this package)

Update gcc-testing/VERSIONS to point to the appropriate directories
and versions.

rtems-SOURCE is assumed to be a CVS checkout by test_driver.
gcc-SOURCE is assumed to be an SVN checkout by test_driver.

If the binutils, newlib, or gdb directories or of the pattern "*cvs*",
then they will also be updated.

Look near the top of do_one for a number of environment variables
such as whether to build binutils and gdb from source or just
copy the RPM contents to the working install point.

do_one in this directory has a LOT of options to control what to do.

Joel's Attempt to Setup a Tree
==============================
mkdir ~/test-gcc
cd ~/test-gcc
cvs -z 9 -d :pserver:anoncvs@sourceware.org:/cvs/src login
cvs -z 9 -d :pserver:anonymous@www.rtems.org:/usr1/CVS login

# test script infrastructure
cvs -z 9 -d :pserver:anonymous@www.rtems.org:/usr1/CVS co -P gcc-testing

# rtems
cvs -z 9 -d :pserver:anonymous@www.rtems.org:/usr1/CVS co -P rtems

# binutils
mkdir binutils-cvs
cd binutils-cvs
cvs -z 9 -d :pserver:anoncvs@sourceware.org:/cvs/src co binutils
cd ..

# newlib
mkdir newlib-cvs
cd newlib-cvs
cvs -z 9 -d :pserver:anoncvs@sourceware.org:/cvs/src co newlib
cd ..

# gdb
mkdir gdb-cvs
cd gdb-cvs
cvs -z 9 -d :pserver:anoncvs@sourceware.org:/cvs/src co gdb
cd ..

# gcc
svn checkout svn://gcc.gnu.org/svn/gcc/trunk gcc-svn

# symlink newlib into gcc-svn
cd gcc-svn
ln -s FULL_PATH/newlib-SOURCE/newlib .
ln -s FULL_PATH/newlib-SOURCE/libgloss .
cd ..

# obtain automake and autoconf from ftp.gnu.org as tarballs
tar xjf autoconf-XXX.tar.bz2
tar xjf automake-XXX.tar.bz2

# make install points
mkdir install
mkdir bsp-install
mkdir log
=========================================

Update VERSIONS appropriately

MPFR/GMP
========

You must have a sufficiently recent version of GMP and MPFR to build
GCC.  On some OSes you can install a standard package.  On others, 
you may have to provide your own installation.

Fedora 10: Install mpfr-devel.

GNAT
====

You must have a native GNAT installed.  .  On some OSes you can
install a standard package.  On others, you may have to provide
your own installation.  The first step in the build process is
building a native compiler with potentially C, C++ and Ada support.
This compiler will be used for all subsequent cross tool builds.

Fedora 10: Install gcc-gnat.


DejaGNU Support Files
=====================

${HOME}/.dejagnurc may point dejagnu to another location.

      set boards_dir /home/joel/dejagnu/boards

The scripts in this directory use their own dejagnu/boards support.

Ada ACATS Testing Support Files
===============================

The files in gcc/testsuite/ada/acats/ directory support 
that directory in the gcc source tree.

C/C++ Support Files
======================

The files rtems_gcc_main.c and rundeja in the top directory
support the gcc/testsuite subdirectory in the gcc source tree.

