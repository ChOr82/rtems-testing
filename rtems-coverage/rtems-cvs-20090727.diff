? cpukit/libcsupport/src/end_profile.c
Index: c/src/make/leaf.cfg
===================================================================
RCS file: /usr1/CVS/rtems/c/src/make/leaf.cfg,v
retrieving revision 1.11
diff -u -r1.11 leaf.cfg
--- c/src/make/leaf.cfg	15 Apr 2009 08:31:09 -0000	1.11
+++ c/src/make/leaf.cfg	27 Jul 2009 19:41:13 -0000
@@ -41,8 +41,9 @@
 # Create a RTEMS executable based on MANAGERS which was set in
 #  app's Makefile
 
-MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS) \
-	$(MANAGERS_REQUIRED), $(MANAGER_LIST))
+## XXX Joel make conditional
+## MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS) \
+## 	$(MANAGERS_REQUIRED), $(MANAGER_LIST))
 
 # Allow user to override link commands (to build a prom image, perhaps)
 ifndef LINKCMDS
@@ -55,14 +56,25 @@
 
 DOWNEXT=.ralf
 
+
+ifeq ($(ENABLE_COVERAGE),yes)
+COV_ARGS=-Wl,--undefined=rtems_task_create \
+         -Wl,--undefined=pthread_create \
+         -Wl,--undefined=end_of_profiling \
+         -Wl,--whole-archive -lrtems -lsapi \
+         -lscore -lposix -Wl,--no-whole-archive \
+         -lcsupport
+
+endif
+
 define bsp-link-c
 	$(LINK.c) $(CPU_CFLAGS) $(AM_CFLAGS) $(AM_LDFLAGS) \
-	    -o $(basename $@)$(EXEEXT) $(LINK_OBJS) $(LINK_LIBS)
+	    -o $(basename $@)$(EXEEXT) $(COV_ARGS) $(LINK_OBJS) $(LINK_LIBS)
 endef
 
 define bsp-link-cxx
 	$(LINK.cc) $(CPU_CFLAGS) $(AM_CFLAGS) $(AM_LDFLAGS) \
-	    -o $(basename $@)$(EXEEXT) $(LINK_OBJS) $(LINK_LIBS)
+	    -o $(basename $@)$(EXEEXT) $(COV_ARGS) $(LINK_OBJS) $(LINK_LIBS)
 endef
 
 define default-bsp-post-link
Index: c/src/make/target.cfg.in
===================================================================
RCS file: /usr1/CVS/rtems/c/src/make/target.cfg.in,v
retrieving revision 1.7
diff -u -r1.7 target.cfg.in
--- c/src/make/target.cfg.in	4 Aug 2007 05:45:16 -0000	1.7
+++ c/src/make/target.cfg.in	27 Jul 2009 19:41:13 -0000
@@ -55,6 +55,7 @@
 # Create a RTEMS executable based on MANAGERS which was set in
 #  app's Makefile
 
-MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS) \
-	$(MANAGERS_REQUIRED), $(MANAGER_LIST))
+## XXX Joel make conditional
+## MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS) \
+## 	$(MANAGERS_REQUIRED), $(MANAGER_LIST))
 
Index: make/leaf.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/leaf.cfg,v
retrieving revision 1.24
diff -u -r1.24 leaf.cfg
--- make/leaf.cfg	15 Sep 2008 17:43:22 -0000	1.24
+++ make/leaf.cfg	27 Jul 2009 19:41:13 -0000
@@ -116,14 +116,28 @@
 
 DOWNEXT=.ralf
 
+ifeq ($(ENABLE_COVERAGE),yes)
+  ifeq ($(HAS_POSIX),yes
+    COV_POSIX_UNDEFINE=-Wl,--undefined=pthread_create
+    COV_POSIX_LIB=-lposix
+  endif
+  COV_ARGS=-Wl,--undefined=rtems_task_create \
+           -Wl,--undefined=pthread_create \
+           $(COV_POSIX_UNDEFINE)
+           -Wl,--undefined=end_of_profiling \
+           -Wl,--whole-archive -lrtems -lsapi \
+           -lscore $(COV_POSIX_LIB) -Wl,--no-whole-archive \
+           -lcsupport
+endif
+
 define bsp-link-c
 	$(LINK.c) $(CPU_CFLAGS) $(AM_CFLAGS) $(AM_LDFLAGS) \
-	    -o $(basename $@).exe $(LINK_OBJS) $(LINK_LIBS)
+	    -o $(basename $@).exe $(COV_ARGS) $(LINK_OBJS) $(LINK_LIBS)
 endef
 
 define bsp-link-cxx
 	$(LINK.cc) $(CPU_CFLAGS) $(AM_CFLAGS) $(AM_LDFLAGS) \
-	    -o $(basename $@).exe $(LINK_OBJS) $(LINK_LIBS)
+	    -o $(basename $@).exe $(COV_ARGS) $(LINK_OBJS) $(LINK_LIBS)
 endef
 
 define default-bsp-post-link
Index: make/compilers/gcc-no_bsp.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/compilers/gcc-no_bsp.cfg,v
retrieving revision 1.14
diff -u -r1.14 gcc-no_bsp.cfg
--- make/compilers/gcc-no_bsp.cfg	18 Sep 2008 17:33:55 -0000	1.14
+++ make/compilers/gcc-no_bsp.cfg	27 Jul 2009 19:41:13 -0000
@@ -201,8 +201,9 @@
 
 # Create a RTEMS executable based on MANAGERS which was set in app's Makefile
 
-MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS), $(MANAGER_LIST))
-MANAGERS_NOT_WANTED:=$(filter-out $(MANAGERS_REQUIRED), $(MANAGERS_NOT_WANTED))
+## XXX JOEL make conditional
+## MANAGERS_NOT_WANTED=$(filter-out $(MANAGERS), $(MANAGER_LIST))
+## MANAGERS_NOT_WANTED:=$(filter-out $(MANAGERS_REQUIRED), $(MANAGERS_NOT_WANTED))
 
 CONSTRUCTOR=
 
Index: make/custom/edb7312.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/custom/edb7312.cfg,v
retrieving revision 1.8
diff -u -r1.8 edb7312.cfg
--- make/custom/edb7312.cfg	6 Mar 2008 21:51:00 -0000	1.8
+++ make/custom/edb7312.cfg	27 Jul 2009 19:41:13 -0000
@@ -18,4 +18,6 @@
 CPU_CFLAGS = -mcpu=$(RTEMS_CPU_MODEL) -mstructure-size-boundary=8
 
 # optimize flag: typically -O2
-CFLAGS_OPTIMIZE_V = -O2 -g
+CFLAGS_OPTIMIZE_V = -Os -g
+
+ENABLE_COVERAGE=yes
Index: make/custom/erc32.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/custom/erc32.cfg,v
retrieving revision 1.37
diff -u -r1.37 erc32.cfg
--- make/custom/erc32.cfg	1 Oct 2008 13:19:51 -0000	1.37
+++ make/custom/erc32.cfg	27 Jul 2009 19:41:13 -0000
@@ -18,4 +18,6 @@
 CPU_CFLAGS = -mcpu=cypress
 
 # optimize flag: typically -O2
-CFLAGS_OPTIMIZE_V = -O2 -g
+CFLAGS_OPTIMIZE_V = -Os -g
+
+ENABLE_COVERAGE=yes
Index: make/custom/leon2.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/custom/leon2.cfg,v
retrieving revision 1.14
diff -u -r1.14 leon2.cfg
--- make/custom/leon2.cfg	6 Mar 2008 21:51:01 -0000	1.14
+++ make/custom/leon2.cfg	27 Jul 2009 19:41:13 -0000
@@ -16,4 +16,6 @@
 CPU_CFLAGS = -mcpu=cypress -msoft-float
 
 # optimize flag: typically -O2
-CFLAGS_OPTIMIZE_V = -O2 -g
+CFLAGS_OPTIMIZE_V = -Os -g
+
+ENABLE_COVERAGE=yes
Index: make/custom/leon3.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/custom/leon3.cfg,v
retrieving revision 1.9
diff -u -r1.9 leon3.cfg
--- make/custom/leon3.cfg	6 Mar 2008 21:51:01 -0000	1.9
+++ make/custom/leon3.cfg	27 Jul 2009 19:41:13 -0000
@@ -18,4 +18,6 @@
 CPU_CFLAGS = -mcpu=cypress -msoft-float
 
 # optimize flag: typically -O2
-CFLAGS_OPTIMIZE_V = -O2 -g
+CFLAGS_OPTIMIZE_V = -Os -g
+
+ENABLE_COVERAGE=yes
Index: make/custom/rtl22xx.cfg
===================================================================
RCS file: /usr1/CVS/rtems/make/custom/rtl22xx.cfg,v
retrieving revision 1.5
diff -u -r1.5 rtl22xx.cfg
--- make/custom/rtl22xx.cfg	6 Mar 2008 21:51:01 -0000	1.5
+++ make/custom/rtl22xx.cfg	27 Jul 2009 19:41:13 -0000
@@ -22,3 +22,5 @@
 # NOTE2: some level of -O may be actually required by inline assembler (at least
 # -O2 so far.
 CFLAGS_OPTIMIZE_V = -Os -g -DNDEBUG
+
+ENABLE_COVERAGE=yes
Index: cpukit/libcsupport/Makefile.am
===================================================================
RCS file: /usr1/CVS/rtems/cpukit/libcsupport/Makefile.am,v
retrieving revision 1.102
diff -u -r1.102 Makefile.am
--- cpukit/libcsupport/Makefile.am	16 Jun 2009 13:34:35 -0000	1.102
+++ cpukit/libcsupport/Makefile.am	27 Jul 2009 19:41:13 -0000
@@ -113,6 +113,8 @@
     $(BSD_LIBC_C_FILES) $(BASE_FS_C_FILES) $(MALLOC_C_FILES) \
     $(ERROR_C_FILES) $(ASSOCIATION_C_FILES)
 
+libcsupport_a_SOURCES += src/end_profile.c
+
 if UNIX
 libcsupport_a_SOURCES += src/unixlibc.c src/unixlibc_io.c src/hosterr.c
 else
Index: cpukit/rtems/Makefile.am
===================================================================
RCS file: /usr1/CVS/rtems/cpukit/rtems/Makefile.am,v
retrieving revision 1.45
diff -u -r1.45 Makefile.am
--- cpukit/rtems/Makefile.am	17 Dec 2008 20:21:39 -0000	1.45
+++ cpukit/rtems/Makefile.am	27 Jul 2009 19:41:13 -0000
@@ -7,6 +7,7 @@
 
 AM_CPPFLAGS += -D__RTEMS_INSIDE__
 
+project_lib_LIBRARIES = librtems.a
 noinst_LIBRARIES = librtems.a
 librtems_a_CPPFLAGS = $(AM_CPPFLAGS)
 
Index: cpukit/rtems/preinstall.am
===================================================================
RCS file: /usr1/CVS/rtems/cpukit/rtems/preinstall.am,v
retrieving revision 1.11
diff -u -r1.11 preinstall.am
--- cpukit/rtems/preinstall.am	29 Jan 2008 21:52:20 -0000	1.11
+++ cpukit/rtems/preinstall.am	27 Jul 2009 19:41:13 -0000
@@ -8,16 +8,30 @@
 PREINSTALL_DIRS =
 DISTCLEANFILES = $(PREINSTALL_DIRS)
 
+all-local: $(TMPINSTALL_FILES)
+
+TMPINSTALL_FILES =
+CLEANFILES = $(TMPINSTALL_FILES)
+
 all-am: $(PREINSTALL_FILES)
 
 PREINSTALL_FILES =
-CLEANFILES = $(PREINSTALL_FILES)
+CLEANFILES += $(PREINSTALL_FILES)
+
+$(PROJECT_LIB)/$(dirstamp):
+	@$(MKDIR_P) $(PROJECT_LIB)
+	@: > $(PROJECT_LIB)/$(dirstamp)
+PREINSTALL_DIRS += $(PROJECT_LIB)/$(dirstamp)
 
 $(PROJECT_INCLUDE)/$(dirstamp):
 	@$(MKDIR_P) $(PROJECT_INCLUDE)
 	@: > $(PROJECT_INCLUDE)/$(dirstamp)
 PREINSTALL_DIRS += $(PROJECT_INCLUDE)/$(dirstamp)
 
+$(PROJECT_LIB)/librtems.a: librtems.a $(PROJECT_LIB)/$(dirstamp)
+	$(INSTALL_DATA) $< $(PROJECT_LIB)/librtems.a
+TMPINSTALL_FILES += $(PROJECT_LIB)/librtems.a
+
 $(PROJECT_INCLUDE)/rtems.h: include/rtems.h $(PROJECT_INCLUDE)/$(dirstamp)
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems.h
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems.h
Index: cpukit/sapi/Makefile.am
===================================================================
RCS file: /usr1/CVS/rtems/cpukit/sapi/Makefile.am,v
retrieving revision 1.35
diff -u -r1.35 Makefile.am
--- cpukit/sapi/Makefile.am	15 Jul 2008 22:56:45 -0000	1.35
+++ cpukit/sapi/Makefile.am	27 Jul 2009 19:41:13 -0000
@@ -20,6 +20,7 @@
 ## src
 AM_CPPFLAGS += -D__RTEMS_INSIDE__
 
+project_lib_LIBRARIES = libsapi.a
 noinst_LIBRARIES = libsapi.a
 libsapi_a_SOURCES = src/debug.c src/extension.c src/extensioncreate.c \
     src/extensiondelete.c src/extensionident.c src/fatal.c src/exinit.c \
Index: cpukit/sapi/preinstall.am
===================================================================
RCS file: /usr1/CVS/rtems/cpukit/sapi/preinstall.am,v
retrieving revision 1.10
diff -u -r1.10 preinstall.am
--- cpukit/sapi/preinstall.am	3 Jul 2008 01:37:38 -0000	1.10
+++ cpukit/sapi/preinstall.am	27 Jul 2009 19:41:13 -0000
@@ -8,10 +8,20 @@
 PREINSTALL_DIRS =
 DISTCLEANFILES = $(PREINSTALL_DIRS)
 
+all-local: $(TMPINSTALL_FILES)
+
+TMPINSTALL_FILES =
+CLEANFILES = $(TMPINSTALL_FILES)
+
 all-am: $(PREINSTALL_FILES)
 
 PREINSTALL_FILES =
-CLEANFILES = $(PREINSTALL_FILES)
+CLEANFILES += $(PREINSTALL_FILES)
+
+$(PROJECT_LIB)/$(dirstamp):
+	@$(MKDIR_P) $(PROJECT_LIB)
+	@: > $(PROJECT_LIB)/$(dirstamp)
+PREINSTALL_DIRS += $(PROJECT_LIB)/$(dirstamp)
 
 $(PROJECT_INCLUDE)/rtems/$(dirstamp):
 	@$(MKDIR_P) $(PROJECT_INCLUDE)/rtems
@@ -62,3 +72,7 @@
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/extension.inl
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/extension.inl
 
+$(PROJECT_LIB)/libsapi.a: libsapi.a $(PROJECT_LIB)/$(dirstamp)
+	$(INSTALL_DATA) $< $(PROJECT_LIB)/libsapi.a
+TMPINSTALL_FILES += $(PROJECT_LIB)/libsapi.a
+
Index: cpukit/score/Makefile.am
===================================================================
RCS file: /usr1/CVS/rtems/cpukit/score/Makefile.am,v
retrieving revision 1.68
diff -u -r1.68 Makefile.am
--- cpukit/score/Makefile.am	27 Jul 2009 00:00:53 -0000	1.68
+++ cpukit/score/Makefile.am	27 Jul 2009 19:41:13 -0000
@@ -21,8 +21,7 @@
     include/rtems/score/bitfield.h include/rtems/score/chain.h \
     include/rtems/score/context.h include/rtems/score/copyrt.h \
     include/rtems/score/corebarrier.h include/rtems/score/coremsg.h \
-    include/rtems/score/coremutex.h include/rtems/score/corerwlock.h \
-    include/rtems/score/coresem.h \
+    include/rtems/score/coremutex.h include/rtems/score/coresem.h \
     include/rtems/score/heap.h include/rtems/score/protectedheap.h \
     include/rtems/score/interr.h include/rtems/score/isr.h \
     include/rtems/score/object.h include/rtems/score/priority.h \
@@ -35,8 +34,9 @@
     include/rtems/score/watchdog.h include/rtems/score/wkspace.h \
     include/rtems/score/cpuopts.h
 
-if LIBPOSIX
-include_rtems_score_HEADERS += include/rtems/score/corespinlock.h
+if HAS_PTHREADS
+include_rtems_score_HEADERS += include/rtems/score/corespinlock.h \
+    include/rtems/score/corerwlock.h
 endif
 
 if HAS_MP
@@ -49,17 +49,18 @@
 ## inline
 include_rtems_score_HEADERS += inline/rtems/score/address.inl \
     inline/rtems/score/chain.inl inline/rtems/score/corebarrier.inl \
-    inline/rtems/score/coremsg.inl inline/rtems/score/corerwlock.inl \
-    inline/rtems/score/coremutex.inl inline/rtems/score/coresem.inl \
-    inline/rtems/score/heap.inl inline/rtems/score/isr.inl \
-    inline/rtems/score/object.inl inline/rtems/score/priority.inl \
-    inline/rtems/score/stack.inl inline/rtems/score/states.inl \
-    inline/rtems/score/sysstate.inl inline/rtems/score/thread.inl \
-    inline/rtems/score/threadq.inl inline/rtems/score/tod.inl \
-    inline/rtems/score/tqdata.inl \
+    inline/rtems/score/coremsg.inl inline/rtems/score/coremutex.inl \
+    inline/rtems/score/coresem.inl inline/rtems/score/heap.inl \
+    inline/rtems/score/isr.inl inline/rtems/score/object.inl \
+    inline/rtems/score/priority.inl inline/rtems/score/stack.inl \
+    inline/rtems/score/states.inl inline/rtems/score/sysstate.inl \
+    inline/rtems/score/thread.inl inline/rtems/score/threadq.inl \
+    inline/rtems/score/tod.inl inline/rtems/score/tqdata.inl \
     inline/rtems/score/watchdog.inl inline/rtems/score/wkspace.inl
-if LIBPOSIX
-include_rtems_score_HEADERS += inline/rtems/score/corespinlock.inl
+
+if HAS_PTHREADS
+include_rtems_score_HEADERS += inline/rtems/score/corespinlock.inl \
+    inline/rtems/score/corerwlock.inl
 endif
 
 if HAS_MP
@@ -72,6 +73,7 @@
 
 AM_CPPFLAGS += -D__RTEMS_INSIDE__
 
+project_lib_LIBRARIES = libscore.a
 noinst_LIBRARIES = libscore.a
 libscore_a_SOURCES =
 libscore_a_CPPFLAGS = $(AM_CPPFLAGS)
@@ -101,15 +103,17 @@
     src/coremutexseizeintr.c
 
 ## CORE_RWLOCK_C_FILES
+if HAS_PTHREADS
 libscore_a_SOURCES += src/corerwlock.c src/corerwlockobtainread.c \
     src/corerwlockobtainwrite.c src/corerwlockrelease.c src/corerwlocktimeout.c
+endif
 
 ## CORE_SEMAPHORE_C_FILES
 libscore_a_SOURCES += src/coresem.c src/coresemflush.c src/coresemseize.c \
     src/coresemsurrender.c
 
 ## CORE_SPINLOCK_C_FILES
-if LIBPOSIX
+if HAS_PTHREADS
 libscore_a_SOURCES += src/corespinlock.c src/corespinlockrelease.c \
     src/corespinlockwait.c
 endif
Index: cpukit/score/preinstall.am
===================================================================
RCS file: /usr1/CVS/rtems/cpukit/score/preinstall.am,v
retrieving revision 1.19
diff -u -r1.19 preinstall.am
--- cpukit/score/preinstall.am	27 Jul 2009 00:00:53 -0000	1.19
+++ cpukit/score/preinstall.am	27 Jul 2009 19:41:13 -0000
@@ -8,10 +8,20 @@
 PREINSTALL_DIRS =
 DISTCLEANFILES += $(PREINSTALL_DIRS)
 
+all-local: $(TMPINSTALL_FILES)
+
+TMPINSTALL_FILES =
+CLEANFILES = $(TMPINSTALL_FILES)
+
 all-am: $(PREINSTALL_FILES)
 
 PREINSTALL_FILES =
-CLEANFILES = $(PREINSTALL_FILES)
+CLEANFILES += $(PREINSTALL_FILES)
+
+$(PROJECT_LIB)/$(dirstamp):
+	@$(MKDIR_P) $(PROJECT_LIB)
+	@: > $(PROJECT_LIB)/$(dirstamp)
+PREINSTALL_DIRS += $(PROJECT_LIB)/$(dirstamp)
 
 $(PROJECT_INCLUDE)/rtems/$(dirstamp):
 	@$(MKDIR_P) $(PROJECT_INCLUDE)/rtems
@@ -75,10 +85,6 @@
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/coremutex.h
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/coremutex.h
 
-$(PROJECT_INCLUDE)/rtems/score/corerwlock.h: include/rtems/score/corerwlock.h $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
-	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/corerwlock.h
-PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/corerwlock.h
-
 $(PROJECT_INCLUDE)/rtems/score/coresem.h: include/rtems/score/coresem.h $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/coresem.h
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/coresem.h
@@ -167,10 +173,14 @@
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/cpuopts.h
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/cpuopts.h
 
-if LIBPOSIX
+if HAS_PTHREADS
 $(PROJECT_INCLUDE)/rtems/score/corespinlock.h: include/rtems/score/corespinlock.h $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/corespinlock.h
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/corespinlock.h
+
+$(PROJECT_INCLUDE)/rtems/score/corerwlock.h: include/rtems/score/corerwlock.h $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
+	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/corerwlock.h
+PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/corerwlock.h
 endif
 if HAS_MP
 $(PROJECT_INCLUDE)/rtems/score/mpci.h: include/rtems/score/mpci.h $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
@@ -205,10 +215,6 @@
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/coremsg.inl
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/coremsg.inl
 
-$(PROJECT_INCLUDE)/rtems/score/corerwlock.inl: inline/rtems/score/corerwlock.inl $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
-	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/corerwlock.inl
-PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/corerwlock.inl
-
 $(PROJECT_INCLUDE)/rtems/score/coremutex.inl: inline/rtems/score/coremutex.inl $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/coremutex.inl
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/coremutex.inl
@@ -269,10 +275,14 @@
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/wkspace.inl
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/wkspace.inl
 
-if LIBPOSIX
+if HAS_PTHREADS
 $(PROJECT_INCLUDE)/rtems/score/corespinlock.inl: inline/rtems/score/corespinlock.inl $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/corespinlock.inl
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/corespinlock.inl
+
+$(PROJECT_INCLUDE)/rtems/score/corerwlock.inl: inline/rtems/score/corerwlock.inl $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
+	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/corerwlock.inl
+PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/corerwlock.inl
 endif
 if HAS_MP
 $(PROJECT_INCLUDE)/rtems/score/mppkt.inl: inline/rtems/score/mppkt.inl $(PROJECT_INCLUDE)/rtems/score/$(dirstamp)
@@ -287,3 +297,7 @@
 	$(INSTALL_DATA) $< $(PROJECT_INCLUDE)/rtems/score/threadmp.inl
 PREINSTALL_FILES += $(PROJECT_INCLUDE)/rtems/score/threadmp.inl
 endif
+$(PROJECT_LIB)/libscore.a: libscore.a $(PROJECT_LIB)/$(dirstamp)
+	$(INSTALL_DATA) $< $(PROJECT_LIB)/libscore.a
+TMPINSTALL_FILES += $(PROJECT_LIB)/libscore.a
+
